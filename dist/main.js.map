{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/test.js","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/optindex.js","webpack:///./src/InspectorService.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","measure","retriveResult","getMeasure","observer","window","PerformanceObserver","console","log","Error","prefix","prefixStart","prefixEnd","fn","startName","endName","performance","mark","list","perfEntries","getEntries","length","observe","entryTypes","entries","duration","getDuration","getEntriesByName","fix","input","forEach","buffered","inspectorService","initInspector","that","this","onerror","errorMessage","scriptURI","lineNo","columnNo","error","errorMsgObj","uploadMsg","msgObj","xhr","XMLHttpRequest","XDomainRequest","open","setRequestHeader","send","JSON","stringify"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var {measure, retriveResult} =  require('./index.js');\r\n\r\nvar {getMeasure} = require('./optindex.js');\r\n\r\n//错误监控\r\nrequire('./InspectorService.js')\r\n\r\nfunction foo(){\r\n    for(var i = 0; i < 1000; i++){}\r\n}\r\n\r\n//--------------use optmeasure---------------------\r\n\r\n//项目入口文件的顶部\r\nlet observer;\r\nif(window.PerformanceObserver){\r\n    console.log('Observer');\r\n    observer = getMeasure();\r\n}\r\n\r\n//某个时机，释放监测\r\n\r\nmeasure(foo);\r\n\r\n\r\n//--------------use optmeasure---------------------\r\n\r\n// const duration = retriveResult('foo');\r\n// console.log(`foo execute duration:${duration}`); //complex 0.19999999858555384, easy 0.09999999747378752,测试精确度不同\r\n\r\nthrow Error(\"custom error\")","var { prefix, prefixStart, prefixEnd } = require('./utils.js');\r\n\r\n\r\nconst selfMeasure = (fn, name = fn.name) => {\r\n    const mark_start = Date.now();\r\n    fn();\r\n    const duration = Date.now() - mark_start;\r\n    return duration;\r\n}\r\n\r\n// 时间不受系统影响，时间精确\r\nconst selfMeasureV1 = (fn, name = fn.name) => {\r\n        const mark_start = performance.now();\r\n        fn();\r\n        const duration = performance.now() - mark_start;\r\n        return duration;\r\n    }\r\n    /**\r\n     * 测量某个函数的执行时间\r\n     * @param {*} fn \r\n     * @param {*} name \r\n     * \r\n     * performance.mark\r\n     * 1.创建一个新的PerformanceMark对象\r\n     * 2.将name属性设置为markName\r\n     * 3.将entryType属性设置为mark\r\n     * 4.将startTime属性设置为performance.now\r\n     * 5.将duration属性设置为0\r\n     * 6.将mark对象放入队列中\r\n     * 7.将mark对象放入performance entry buffer中\r\n     * 8.返回undefined\r\n     */\r\nconst measureV1 = (fn, name = fn.name) => {\r\n    performance.mark(prefixStart(name));\r\n    fn();\r\n    performance.mark(prefixEnd(name));\r\n}\r\n\r\n\r\nconst getMarks = key => {\r\n    return performance\r\n        .getEntriesByType('mark') // 只获取通过 performance.mark 记录的数据\r\n        .filter(({ name }) => name === prefixStart(key) || name === prefixEnd(key))\r\n}\r\n\r\nconst getDurationV1 = entries => {\r\n    //[PerformanceMark, PerformanceMark] {name:startxx, entryType:'mark', startTime:, duration} {name:endxx, entryType}\r\n    console.log(entries);\r\n    const { start = 0, end = 0 } = entries.reduce((last, { name, startTime }) => {\r\n        if (/^start/.test(name)) {\r\n            last.start = startTime\r\n        } else if (/^end/.test(name)) {\r\n            last.end = startTime\r\n        }\r\n        return last\r\n    }, {})\r\n    console.log(`start:${start}, end:${end}`)\r\n    return end - start;\r\n}\r\n\r\nconst retriveResultV1 = key => getDurationV1(getMarks(key));\r\n//----opt--v\r\nconst measure = (fn, name = fn.name) => {\r\n    const startName = prefixStart(name);\r\n    const endName = prefixEnd(name);\r\n    performance.mark(startName);\r\n    fn();\r\n    performance.mark(endName);\r\n    //调用measure，简化时间计算\r\n    performance.measure(name, startName, endName);\r\n}\r\n\r\n\r\nconst getDuration = entries => {\r\n    //直接获取duration, entries对应数组 [PerformanceMeasure对象] {duration:, entryType:'measure', name:'foo', startTime:}\r\n    console.log(entries);\r\n    const [{ duration }] = entries;\r\n    return duration;\r\n}\r\n\r\nconst retriveResult = key => getDuration(performance.getEntriesByName(key));\r\n\r\n\r\n//异步函数\r\nconst asyncMeasure = async(fn, name = fn.name) => {\r\n    const startName = prefixStart(name);\r\n    const endName = prefixEnd(name);\r\n    performance.mark(startName);\r\n    await fn();\r\n    performance.mark(endName);\r\n    //调用measure\r\n    performance.measure(name, startName, endName);\r\n}\r\n\r\n\r\n//获取首屏数据\r\n//首次绘制(first paint)不保罗默认背景绘制,但是包含非默认的背景绘制和iframe\r\nconst measureFirstPaint = () => {\r\n    performance.getEntriesByType('paint')\r\n}\r\n\r\nconst observer = new PerformanceObserver(function(list) {\r\n\r\n    const perfEntries = list.getEntries()\r\n\r\n    for (let i = 0; i < perfEntries.length; i++) {\r\n        // 处理数据\r\n        // 上报性能检测数据\r\n        console.log(\"xxx\");\r\n    }\r\n\r\n})\r\n\r\n// 注册绘制观察者\r\nobserver.observe({ entryTypes: [\"paint\"] })\r\n\r\nmodule.exports = { measure: measure, retriveResult: retriveResult };\r\n\r\nwindow.measure = measure;","const prefix = fix => input => `${fix}${input}`;\r\nconst prefixStart = prefix('start');\r\nconst prefixEnd = prefix('end');\r\n\r\nmodule.exports =  {prefix, prefixStart, prefixEnd};","/**\r\n * NOTE:\r\n *         mark                                       measure\r\n * 作用   运行某个操作时，记录一个时间戳                  针对起始+结束的mark值，汇总形成一个直接可用的性能数据\r\n * 不足   对于一个操作，需要两个时间戳才能计算出性能耗时     想要测量多个操作时，需要重复调用\r\n * 进阶版\r\n **/\r\n\r\n\r\n/**使用PerformanceObserver接口，解决以下问题\r\n *1，每次查看数据时，要主动调用接口\r\n   2. 当获取不同类型的数据指标时，产生重复逻辑\r\n   3.其他资源需要同时操作 performance buffer时，产生资源竞争情况\r\n\r\n */\r\n\r\nconst getMeasure = () => {\r\n    const observer = new PerformanceObserver(list => {\r\n        list.getEntries().forEach(({ name, duration }) => {\r\n            console.log(`name is ${name}, duration is ${duration}`);\r\n            //操作数据逻辑\r\n        });\r\n    });\r\n\r\n    //只需要关注 measure 的数据,必须调用perform.measure才生效\r\n    observer.observe({\r\n        entryTypes: ['measure'],\r\n        buffered: true\r\n    })\r\n    return observer;\r\n}\r\n\r\nmodule.exports = { getMeasure };","var inspectorService = {\r\n    initInspector:function(){\r\n        var that = this;\r\n        window.onerror = function(errorMessage, scriptURI, lineNo, columnNo, error){\r\n            console.log('errorMessage: ' + errorMessage);\r\n            console.log('scriptURI: ' + scriptURI);\r\n            console.log('lineNo: ' + lineNo);\r\n            console.log('columnNo: ' + columnNo);\r\n            console.log('error: ' + error);\r\n            var errorMsgObj = {errorMessage, scriptURI, lineNo, columnNo, error};\r\n            console.log(errorMsgObj);\r\n            that.uploadMsg(errorMsgObj);\r\n        }\r\n    },\r\n\r\n    uploadMsg:function(msgObj){\r\n        var xhr = new XMLHttpRequest();\r\n        if('withCredentials' in xhr){\r\n            console.log('withCredentials');\r\n            // xhr.withCredentials = true;\r\n        }else if(typeof XDomainRequest != 'undefined'){\r\n                xhr = new XDomainRequest();\r\n                // var versions = [\"MSXML2.XMLHttp.6.0\", \"MSXML2.XMLHttp.3.0\", \"MSXML2.XMLHttp\"];\r\n                // var i, len;\r\n                // for(i = 0, len = versions.length; i < len; i++){\r\n                //     try {\r\n                //          new ActiveXObject(versions[i]);\r\n                //          arguments.callee.activeString = versions[i];\r\n                //          break;\r\n                //     } catch (error) {\r\n                        \r\n                //     }\r\n                // }\r\n                // xhr = new ActiveXObject(arguments.callee.activeString); \r\n        }\r\n        if(xhr){\r\n            xhr.open('post', 'http://localhost:9000/middleware/errorMsg', true);\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n            xhr.send(JSON.stringify(msgObj));\r\n        }\r\n    }\r\n}\r\n/**\r\n * NOTE 对于跨域的脚本，默认是无法捕获异常信息的，会统一返回Scripterror\r\n * 解决方案是在script中配置属性 crossOrigin=\"anonymous\"并且服务器添加Access-Control-Allow-Origin\r\n * <script  src=\"\" crossOrigin=\"anonymous\"></script>\r\n */\r\ninspectorService.initInspector();\r\n\r\nmodule.exports = {inspectorService}\r\n"],"sourceRoot":""}